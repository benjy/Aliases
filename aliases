deploy(){

CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

ALL_BRANCES=$(git branch)

STAGED_CHANGES=$(git diff --exit-code)
UNTRACKED_FILES=$(git ls-files --other --exclude-standard --directory)

# Ensure we have a branch name as an argument.
if [ -z "$1" ]
  then
    echo "Please provide a branch name to deploy."
    return
fi

if [ ! -z "$STAGED_CHANGES" ]
then
  echo 'Commit changes in working state before deployment.'
  return
fi

if [ ! -z "$UNTRACKED_FILES" ]
then
  echo 'You have untracked files. Please resolve before deployment.'
  echo "$UNTRACKED_FILES"
  return
fi

SITE_ALIAS=$(drush site-alias @$1)


if [ -z "$SITE_ALIAS" ]
then
  echo "No site alias was found for '$1'"
  return
fi

REMOTE_HASH=$(git ls-remote origin -h refs/heads/$1 | cut -f1)
LOCAL_HASH=$(git rev-parse $1)

if [ ! "$REMOTE_HASH" = "$LOCAL_HASH" ]
then
  echo -e "Your local branch is not up to date with the remote.\nPlease merge the remote changes into your local branch to deploy."
  return
fi


# We have a branch to switch to and everything is great.
echo ""
git checkout $1
echo ""

# Send our local working state to the live site
drush rsync --progress default @"$1"

echo -e "\nDeployment from 'local' to '$1' complete.\n"

$(git checkout -q $CURRENT_BRANCH)

read -p "Do you want to clear the cache on $1? " -n 1 -r
if [[ $REPLY =~ ^[Yy]$ ]]
then
    drush @"$1" cc all
fi
}

alias drupal-htaccess="wget -q --no-check-certificate -t 3 https://raw.github.com/drupal/drupal/7.x/.htaccess"
alias drupal-updates="drush up -n | grep -ir 'available'"

# Run simpletest with run-tests. (D8)
function run-tests() {
  php core/scripts/run-tests.sh --verbose --url "http://localhost/${PWD##*/}" --class "$1"
}

# Rebuild PHPStorm hooks.
function drupal-hooks() {
  find . -name \*.php | xargs grep -l '^function hook_' | xargs ~/parse_drupal_api.pl > ~/Library/Preferences/WebIde60/templates/user.xml
}

# Apply a remote patch.
function dpatch() {
  curl $1 | git apply
}

# Re-install Drupal 8
function drupal8-install() {
    # Remove existing database
    drush sql-drop -y --db-url=mysql://root:@127.0.0.1/$1;
    # Remove existing install
    sudo rm -rf sites/default;
    # Restore the sites/default/default.settings.php file
    sudo git checkout -- sites/default;
    # Temporarily make the sites/default writable by anyone
    sudo chmod -R 777 sites/default;
    # Ensure the owner is the current user, not root user
    sudo chown -R `whoami` sites/default;
    # Now that we own it and can write, change the permissions back to how drupal expects them
    sudo git checkout -- sites/default;
    # But still ensure that we own the folder
    sudo chown -R `whoami` sites/default;
 
    # Uncomment this to stop here so you can install the UI
    #exit;
 
    # If you run this command with an argument, it will be the name of the DB
    if [ $1 ] ; then
        drush si --db-url=mysql://root:@localhost/$1 -y
    else
        drush si --db-url=mysql://root:@localhost/d8 -y
    fi
    # Install and uninstall common modules
    drush en simpletest -y
    sudo chmod -R 777 sites/default/files;
}

# D7 install
function d7-install() {
  drush site-install -y $2 --db-url=mysql://root:@127.0.0.1/$1 --site-name="Default Install"
}

# Clean up old/new branch used for rebasing.
function clean-up() {
	git branch -D old_patch
	git branch -D new_patch
}

# Create a patch based on the branch name.
function cpatch() {
    branch=$(git rev-parse --abbrev-ref HEAD)
    git diff 8.x > ~/patches/$branch"_"$1.patch
}

# alias for commit contrib modules.
function cgc() {
    git commit -m "[CONTRIB] - $1";
}

# Drush
alias cc="drush cc all"
alias ccc="drush cc all; clear;"

# Download and enable a module
function dm(){
  drush dl $1; 
  drush en -y $1;
}

# Git
alias aa="git add -A ."
alias gc="git commit -m "
alias co="git checkout "
alias gp="git pull origin "
alias gpm="gp master"
alias pm="git push origin master"
alias gb="git branch"
alias gs="git status"
alias p="git push origin "
alias gl="git log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"

# Random Crap

csscount() {
    cnt=0
    depth=0
    while read -n 1 char; do
            case $char in
                    "{")
                            ((depth++))
                            ;;
                    "}")
                            ((depth--))
                            if [ "$depth" -eq "0" ]; then
                                    ((cnt++))
                            fi
                            ;;
                    ",")
                            ((cnt++))
                            ;;
            esac
    done

    echo $cnt
}
# Shell
alias c='clear'
alias wget='wget --content-disposition'
alias ll='ls -lAhGp'

